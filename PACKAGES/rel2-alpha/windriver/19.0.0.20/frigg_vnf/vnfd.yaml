heat_template_version: 2016-04-08


description: >
  A  FRIGG VNF 

parameters:

  management_network:
    type: string

  service_network:
    type: string

  qsync_network:
    type: string

  flowsync_network:
    type: string


  name:
    type: string
    default: pre

  flavor:
    type: string
    default: PRE-FLAVOR

  desired_count:
    type: number
    default: 1

  management_provider_network:
    type: string

  int_network:
    type: string

  ext_network:
    type: string


  scale_out_cooldown:
    type: number
    default: 150

  scale_in_cooldown:
    type: number
    default: 300

  scale_out_threshold:
    type: number
    default: 50

  scale_in_threshold:
    type: number
    default: 20

  ns_instance_name:
    type: string
    description: Name of embracing NS instance. Used in composing key for elements data mapping.

  ns_vnf_instance_name:
    type: string
    description: Name of this VNF instance within embracing NS instance. Used in composing key for elements data mapping.

  key_name:
    type: string
    description: Name of key for admin



resources:



  pre_scale_in:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: servers }
      cooldown: {get_param: scale_in_cooldown}
      scaling_adjustment: -1

  pre_scale_out:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: servers }
      cooldown: {get_param: scale_out_cooldown}
      scaling_adjustment: 1


  servers:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 1
      max_size: 4
      desired_capacity: { get_param: desired_count }
      resource: 
        type: OS::Heat::Stack
        properties:
          parameters:
            index: "%index%"
            name: { get_param: name }
            flavor: { get_param: flavor }
            image: PRE-CLOUD-19.0.0.20
            management_network: { get_param: management_network }
            service_network: { get_param: service_network }
            flowsync_network: { get_param: flowsync_network }
            qsync_network: { get_param: qsync_network }
            int_1_channel_network: { get_resource: int_1_channel_net }
            ext_1_channel_network: { get_resource: ext_1_channel_net }
            int_2_channel_network: { get_resource: int_2_channel_net }
            ext_2_channel_network: { get_resource: ext_2_channel_net }
            int_3_channel_network: { get_resource: int_3_channel_net }
            ext_3_channel_network: { get_resource: ext_3_channel_net }
            int_4_channel_network: { get_resource: int_4_channel_net }
            ext_4_channel_network: { get_resource: ext_4_channel_net }
            management_provider_network: { get_param: management_provider_network }
            security_group: { get_resource: security_group }
            vnf_instance_id: { get_param: "OS::stack_id" }
            ns_instance_name: {get_param: ns_instance_name}
            ns_vnf_instance_name: {get_param: ns_vnf_instance_name}
          template: |
              heat_template_version: 2016-04-08
              #
              description: >
                A stack with 1 vPRE VM and associated resources
              #
              parameters:
              #
                index:
                  type: string
                  description: Index number of VM
                  label: VM index
                name:
                  type: string
                flavor:
                  type: string
                image:
                  type: string
                management_network:
                  type: string
                service_network:
                  type: string
                qsync_network:
                  type: string
                flowsync_network:
                  type: string
                security_group:
                  type: string
                management_provider_network:
                  type: string
                int_1_channel_network:
                  type: string
                int_2_channel_network:
                  type: string
                int_3_channel_network:
                  type: string
                int_4_channel_network:
                  type: string
                ext_1_channel_network:
                  type: string
                ext_2_channel_network:
                  type: string
                ext_3_channel_network:
                  type: string
                ext_4_channel_network:
                  type: string
                vnfc_name:
                  type: string
                  default: pre
                vnf_instance_id:
                  type: string
                ns_instance_name:
                  type: string
                  description: Name of embracing NS instance. Used in composing key for elements data mapping.
                ns_vnf_instance_name:
                  type: string
                  description: Name of this VNF instance within embracing NS instance. Used in composing key for elements data mapping.
              #
              outputs:
                server_id:
                  value: {get_attr: [server,show,id]}
              #
              resources:
              #
                server:
                  type: OS::Nova::Server
                  properties:
                    image: { get_param: image }
                    flavor: { get_param: flavor }
                    user_data: { get_resource: cloud_config }
                    user_data_format: RAW
                    networks:
                      - port : { get_resource: management_port }
                      - port : { get_resource: service_port }
                      - port : { get_resource: qsync_port }
                      - port : { get_resource: flowsync_port }
                      - port : { get_resource: monitor_port }
                      - network : { get_param: int_1_channel_network }
                      - network : { get_param: ext_1_channel_network }
                      - network : { get_param: int_2_channel_network }
                      - network : { get_param: ext_2_channel_network }
                      - network : { get_param: int_3_channel_network }
                      - network : { get_param: ext_3_channel_network }
                      - network : { get_param: int_4_channel_network }
                      - network : { get_param: ext_4_channel_network }
              #
                management_port:
                  type: OS::Neutron::Port
                  properties:
                    network: { get_param: management_network }
                    port_security_enabled: true
                    security_groups:
                      - { get_param: security_group }
              #
                service_port:
                  type: OS::Neutron::Port
                  properties:
                    network: { get_param: service_network }
                    port_security_enabled: true
                    security_groups:
                      - { get_param: security_group }
              #
                qsync_port:
                  type: OS::Neutron::Port
                  properties:
                    network: { get_param: qsync_network }
                    port_security_enabled: false
              #
                monitor_port:
                  type: OS::Neutron::Port
                  properties:
                    network: { get_param: flowsync_network }
                    port_security_enabled: false
              #
                flowsync_port:
                  type: OS::Neutron::Port
                  properties:
                    network: { get_param: flowsync_network }
                    port_security_enabled: false
              #
                fip: 
                  type: OS::Neutron::FloatingIP
                  properties: 
                    floating_network: { get_param: management_provider_network }
              #
                fip_assign:
                  type: OS::Neutron::FloatingIPAssociation
                  properties:
                    floatingip_id: { get_resource: fip }
                    port_id: { get_resource: management_port }
              #
                cloud_config:
                  type: OS::Heat::CloudConfig
                  properties:
                    cloud_config:
                      merge_how: 'dict(recurse_array,no_replace)+list(append)'
                      bootcmd:
                        - ["set-aux-interfaces-qty", "2"]
                      runcmd:
                        - ["get_osm_keys.sh"]
                        - ["/pl2/octo/addon.sh"]
                      write_files:
                        - path: "/run/config/vnf/vnf_instance_id"
                          content:
                            str_replace:
                              template: |
                                __value__
                              params:
                                __value__ : {get_param: vnf_instance_id}
                        - path: "/run/config/vnf/ns_instance_name"
                          content:
                            str_replace:
                              template: |
                                __value__
                              params:
                                __value__ : {get_param: ns_instance_name}
                        - path: "/run/config/vnf/ns_vnf_instance_name"
                          content:
                            str_replace:
                              template: |
                                __value__
                              params:
                                __value__ : {get_param: ns_vnf_instance_name}
                        - path: "/run/config/vnf/vnfc_name"
                          content:
                            str_replace:
                              template: |
                                __value__
                              params:
                                __value__ : {get_param: vnfc_name}
                        - path: "/run/config/consul/interface"
                          content: |
                            aux_1
                        - path: "/run/config/consul/security"
                          content: |
                            
                        - path: "/usr/libexec/cloud/config_local_stats"
                          permissions: "0775"
                          content: |
                            #!/bin/bash
                            source /etc/SYSTEM
                            source /etc/functions
                            touch $PLSYSPATH/local_statistics
                            cat >$PLSYSPATH/plsd.hosts.LOCAL <<-EOF
                                 pldhost 127.0.0.1
                                 plduser packetlogicd
                                 pldpassword secret2
                            EOF
                            init_d_run statistics
                            commitlog "Local statistics enabled (with pldb/pls restart)"
                            init_d_run config_remote_plsd
                            pl2_sql -c "update config set value='1' where name='INSIGHTS_TRAFFIC_ENABLED';"
                            pl2_sql -c "update config set value='1' where name='INSIGHTS_USE_SESSION_CONTEXT';"
                            pl2_sql -c "update config set value='session' where name='INSIGHTS_SESSION_CONTEXT_SCHEMAS';"
                            pl2_sql -c "update config set value='subId' where name='INSIGHTS_DIMENSIONS_SUBSCRIBER';"
                            pl2_sql -c "insert into statisticsrules (name,insights_traffic,comments) values ('Insights','t','Cloud-init');"
                            sv restart plsd
                            sv restart pldbd
                            sv restart plosloader
                        - path: "/usr/libexec/cloud/get_osm_keys.sh"
                          permissions: "0775"
                          content: |
                            #!/bin/bash
                            keyindex=-1
                            lastexitcode=0
                            while [ $lastexitcode -eq 0 ]; do
                              keyindex=$((keyindex + 1))
                              curl -f -o /tmp/tmpkey http://169.254.169.254/latest/meta-data/public-keys/$keyindex/openssh-key
                              lastexitcode=$?
                              if [ $lastexitcode -eq 0 ]; then
                                cat /tmp/tmpkey >> /pl2/pl2/ssh-authorized-keys/root
                              fi
                            done
                            if [ -e /pl2/pl2/ssh-authorized-keys/root ]; then
                              chmod 0600 /pl2/pl2/ssh-authorized-keys/root
                            fi
                        - path: "/pl2/pl2/system-conf/if_aux_1_interface"
                          permissions: "0664"
                          owner: root
                          content: |
                            eth1
                        - path: "/pl2/pl2/system-conf/if_aux_2_interface"
                          permissions: "0664"
                          owner: root
                          content: |
                            eth2






  int_1_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_1_int

  int_1_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: int_1_channel_net }
      cidr: 192.168.70.0/24

  ext_1_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_1_ext

  ext_1_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: ext_1_channel_net }
      cidr: 192.168.70.0/24

  int_2_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_2_int

  int_2_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: int_2_channel_net }
      cidr: 192.168.70.0/24

  ext_2_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_2_ext

  ext_2_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: ext_2_channel_net }
      cidr: 192.168.70.0/24

  int_3_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_3_int

  int_3_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: int_3_channel_net }
      cidr: 192.168.70.0/24

  ext_3_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_3_ext

  ext_3_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: ext_3_channel_net }
      cidr: 192.168.70.0/24

  int_4_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_4_int

  int_4_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: int_4_channel_net }
      cidr: 192.168.70.0/24

  ext_4_channel_net:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: false
      name: chan_4_ext

  ext_4_channel_subnet:    
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: ext_4_channel_net }
      cidr: 192.168.70.0/24



  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: pre-security-group
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535



  monitor_management_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: management_network }
      port_security_enabled: true
      security_groups:
        - { get_resource: security_group }

  monitor_service_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: service_network }
      port_security_enabled: true
      security_groups:
        - { get_resource: security_group }

  monitor_fip: 
    type: OS::Neutron::FloatingIP
    properties: 
      floating_network: { get_param: management_provider_network }

  monitor_fip_assign:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: monitor_fip }
      port_id: { get_resource: monitor_management_port }



  management_port_int:
    type: OS::Neutron::Port
    properties:
      network: { get_param: management_provider_network }

  management_port_ext:
    type: OS::Neutron::Port
    properties:
      network: { get_param: management_provider_network }


  heimdall_int:
    type: OS::Nova::Server
    properties:
      name: Heimdall INT
      image: HEIMDALL-CLOUD-19.0.0.20
      flavor: HEIMDALL-FLAVOR
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: management_port_int }
        - network: { get_param: int_network }
        - network: { get_resource: int_1_channel_net }
        - network: { get_resource: int_2_channel_net }
        - network: { get_resource: int_3_channel_net }
        - network: { get_resource: int_4_channel_net }
      user_data_format: RAW
      config_drive: True
      user_data: 
        str_replace:
          template: |
              {
                "vnf": {
                  "entries": {
                    "vnfinstance"  : { "content": "__vnfinstance__" },
                    "vnfc"         : { "content": "heimdall_int" }
                  }
                },
                "heimdall": {
                  "entries": {
                    "slave-interfaces": { "content": "eth2 eth3 eth4 eth5" },
                    "master-interface": { "content": "eth1" },
                    "local-ip": { "content": "10.0.0.100" },
                    "remote-ip": { "content": "10.0.0.200" }
                  }
                }
              }
          params:
            __vnfinstance__:  { get_param: "OS::stack_id" }


  heimdall_ext:
    type: OS::Nova::Server
    properties:
      name: Heimdall EXT
      image: HEIMDALL-CLOUD-19.0.0.20
      flavor: HEIMDALL-FLAVOR
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: management_port_ext }
        - network: { get_param: ext_network }
        - network: { get_resource: ext_1_channel_net }
        - network: { get_resource: ext_2_channel_net }
        - network: { get_resource: ext_3_channel_net }
        - network: { get_resource: ext_4_channel_net }
      user_data_format: RAW
      config_drive: True
      user_data: 
        str_replace:
          template: |
              {
                "vnf": {
                  "entries": {
                    "vnfinstance"  : { "content": "__vnfinstance__" },
                    "vnfc"         : { "content": "heimdall_ext" }
                  }
                },
                "heimdall": {
                  "entries": {
                    "slave-interfaces": { "content": "eth2 eth3 eth4 eth5" },
                    "master-interface": { "content": "eth1" },
                    "local-ip": { "content": "10.0.0.200" },
                    "remote-ip": { "content": "10.0.0.100" }
                  }
                }
              }
          params:
            __vnfinstance__:  { get_param: "OS::stack_id" }



outputs:
  server_id:
    value: {get_attr: [servers,server_id]}
  scalingdata:
    value:
      vnf_instance_id:  { get_param: "OS::stack_id" }
      scale_in:         {get_attr: [pre_scale_in, alarm_url]}
      scale_out:        {get_attr: [pre_scale_out, alarm_url]}
      indicator:        pre_cpuload_avg
      in_threshold:     {get_param: scale_in_threshold}
      out_threshold:    {get_param: scale_out_threshold}

      
